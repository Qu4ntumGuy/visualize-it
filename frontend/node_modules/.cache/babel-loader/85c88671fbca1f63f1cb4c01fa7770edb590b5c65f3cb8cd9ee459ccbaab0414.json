{"ast":null,"code":"import*as topojson from\"topojson-client\";import{geoPath,geoMercator}from\"d3-geo\";import{select}from\"d3-selection\";import{useEffect,useState}from\"react\";// import citiesData from \"./citiesData\"; // Assuming you import the data from a file or source\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapChart=_ref=>{let{data,citiesData}=_ref;const[worldMap,setWorldMap]=useState([]);useEffect(()=>{if(data&&data.objects&&data.objects.countries){const features=topojson.feature(data,data.objects.countries).features;setWorldMap(features);}else{console.error(\"World data is not in the expected format:\",data);}},[data]);const projection=geoMercator().scale(150).translate([480,250]);const pathGenerator=geoPath().projection(projection);const cityCoordinates={Plano:[-96.6989,33.0198],\"El Paso\":[-106.485,31.7619],Stockton:[-121.2908,37.9577],\"San Antonio\":[-98.4936,29.4241],\"St. Paul\":[-93.09,44.9537],Oakland:[-122.2712,37.8044],Washington:[-77.0369,38.9072],Seattle:[-122.3321,47.6062],\"Kansas City\":[-94.5786,39.0997],\"Las Vegas\":[-115.1398,36.1699],Wichita:[-97.3301,37.6872],Houston:[-95.3698,29.7604],Dallas:[-96.797,32.7767],Hialeah:[-80.2781,25.8576],\"San Jose\":[-121.8863,37.3382],Cincinnati:[-84.512,39.1031],Laredo:[-99.5075,27.5036],Boston:[-71.0589,42.3601],Austin:[-97.7431,30.2672],\"Chula Vista\":[-117.0842,32.6401],\"San Francisco\":[-122.4194,37.7749],Detroit:[-83.0458,42.3314],Henderson:[-114.9817,36.0395],\"Fort Worth\":[-97.3308,32.7555],Jacksonville:[-81.6557,30.3322],Aurora:[-104.8319,39.7294],\"Colorado Springs\":[-104.8214,38.8339],Denver:[-104.9903,39.7392],\"Jersey City\":[-74.0431,40.7178],Memphis:[-90.049,35.1495],Toledo:[-83.5379,41.6528],\"Corpus Christi\":[-97.3964,27.8006],Columbus:[-82.9988,39.9612],Chicago:[-87.6298,41.8781],\"Los Angeles\":[-118.2437,34.0522],\"Santa Ana\":[-117.8678,33.7455],Lexington:[-84.5037,38.0406],Tucson:[-110.9747,32.2226],Riverside:[-117.3962,33.9806],Gilbert:[-111.789,33.3528],Buffalo:[-78.8784,42.8864],Newark:[-74.1724,40.7357],Bakersfield:[-119.0187,35.3733],Tulsa:[-95.9928,36.1539],Atlanta:[-84.388,33.749],Minneapolis:[-93.265,44.9778],Greensboro:[-79.791,36.0726],\"San Diego\":[-117.1611,32.7157],Baltimore:[-76.6122,39.2904],Chattanooga:[-85.3097,35.0456],\"New York\":[-74.006,40.7128],Nashville:[-86.7816,36.1627],\"Oklahoma City\":[-97.5164,35.4676],Garland:[-96.6389,32.9126],\"St. Petersburg\":[-82.6403,27.7676],Orlando:[-81.3792,28.5383],Honolulu:[-157.8583,21.3069],\"St. Louis\":[-90.1994,38.627],Tampa:[-82.4572,27.9506],Charlotte:[-80.8431,35.2271],Phoenix:[-112.074,33.4484],Portland:[-122.6765,45.5051],Philadelphia:[-75.1652,39.9526],Glendale:[-112.185,33.5387],Miami:[-80.1918,25.7617],Cleveland:[-81.6944,41.4993],Lincoln:[-96.6852,40.8136],Arlington:[-97.1081,32.7357],Indianapolis:[-86.1581,39.7684],\"Fort Wayne\":[-85.1394,41.0793],Anaheim:[-117.9143,33.8366],Madison:[-89.4012,43.0731],Raleigh:[-78.6382,35.7796]};return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"960\",height:\"500\",children:[worldMap.map((d,i)=>/*#__PURE__*/_jsx(\"path\",{d:pathGenerator(d),fill:`rgba(64, 145, 91,${1/worldMap.length*i})`,stroke:\"#FFFFFF\",strokeWidth:0.5},`path-${i}`)),citiesData.map((city,i)=>{const coordinates=cityCoordinates[city._id];if(coordinates){const[x,y]=projection(coordinates);return/*#__PURE__*/_jsx(\"circle\",{cx:x,cy:y,r:Math.sqrt(city.count)*2,fill:\"rgba(255,0,0,0.6)\",stroke:\"#FFFFFF\",strokeWidth:0.5,children:/*#__PURE__*/_jsx(\"title\",{children:`${city._id}: ${city.count}`})},`circle-${i}`);}return null;})]})});};export default MapChart;","map":{"version":3,"names":["topojson","geoPath","geoMercator","select","useEffect","useState","jsx","_jsx","jsxs","_jsxs","MapChart","_ref","data","citiesData","worldMap","setWorldMap","objects","countries","features","feature","console","error","projection","scale","translate","pathGenerator","cityCoordinates","Plano","Stockton","Oakland","Washington","Seattle","Wichita","Houston","Dallas","Hialeah","Cincinnati","Laredo","Boston","Austin","Detroit","Henderson","Jacksonville","Aurora","Denver","Memphis","Toledo","Columbus","Chicago","Lexington","Tucson","Riverside","Gilbert","Buffalo","Newark","Bakersfield","Tulsa","Atlanta","Minneapolis","Greensboro","Baltimore","Chattanooga","Nashville","Garland","Orlando","Honolulu","Tampa","Charlotte","Phoenix","Portland","Philadelphia","Glendale","Miami","Cleveland","Lincoln","Arlington","Indianapolis","Anaheim","Madison","Raleigh","className","children","width","height","map","d","i","fill","length","stroke","strokeWidth","city","coordinates","_id","x","y","cx","cy","r","Math","sqrt","count"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/MapChart.js"],"sourcesContent":["import * as topojson from \"topojson-client\";\r\nimport { geoPath, geoMercator } from \"d3-geo\";\r\nimport { select } from \"d3-selection\";\r\nimport { useEffect, useState } from \"react\";\r\n// import citiesData from \"./citiesData\"; // Assuming you import the data from a file or source\r\n\r\nconst MapChart = ({ data, citiesData }) => {\r\n  const [worldMap, setWorldMap] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.objects && data.objects.countries) {\r\n      const features = topojson.feature(data, data.objects.countries).features;\r\n      setWorldMap(features);\r\n    } else {\r\n      console.error(\"World data is not in the expected format:\", data);\r\n    }\r\n  }, [data]);\r\n\r\n  const projection = geoMercator().scale(150).translate([480, 250]);\r\n  const pathGenerator = geoPath().projection(projection);\r\n\r\n  const cityCoordinates = {\r\n    Plano: [-96.6989, 33.0198],\r\n    \"El Paso\": [-106.485, 31.7619],\r\n    Stockton: [-121.2908, 37.9577],\r\n    \"San Antonio\": [-98.4936, 29.4241],\r\n    \"St. Paul\": [-93.09, 44.9537],\r\n    Oakland: [-122.2712, 37.8044],\r\n    Washington: [-77.0369, 38.9072],\r\n    Seattle: [-122.3321, 47.6062],\r\n    \"Kansas City\": [-94.5786, 39.0997],\r\n    \"Las Vegas\": [-115.1398, 36.1699],\r\n    Wichita: [-97.3301, 37.6872],\r\n    Houston: [-95.3698, 29.7604],\r\n    Dallas: [-96.797, 32.7767],\r\n    Hialeah: [-80.2781, 25.8576],\r\n    \"San Jose\": [-121.8863, 37.3382],\r\n    Cincinnati: [-84.512, 39.1031],\r\n    Laredo: [-99.5075, 27.5036],\r\n    Boston: [-71.0589, 42.3601],\r\n    Austin: [-97.7431, 30.2672],\r\n    \"Chula Vista\": [-117.0842, 32.6401],\r\n    \"San Francisco\": [-122.4194, 37.7749],\r\n    Detroit: [-83.0458, 42.3314],\r\n    Henderson: [-114.9817, 36.0395],\r\n    \"Fort Worth\": [-97.3308, 32.7555],\r\n    Jacksonville: [-81.6557, 30.3322],\r\n    Aurora: [-104.8319, 39.7294],\r\n    \"Colorado Springs\": [-104.8214, 38.8339],\r\n    Denver: [-104.9903, 39.7392],\r\n    \"Jersey City\": [-74.0431, 40.7178],\r\n    Memphis: [-90.049, 35.1495],\r\n    Toledo: [-83.5379, 41.6528],\r\n    \"Corpus Christi\": [-97.3964, 27.8006],\r\n    Columbus: [-82.9988, 39.9612],\r\n    Chicago: [-87.6298, 41.8781],\r\n    \"Los Angeles\": [-118.2437, 34.0522],\r\n    \"Santa Ana\": [-117.8678, 33.7455],\r\n    Lexington: [-84.5037, 38.0406],\r\n    Tucson: [-110.9747, 32.2226],\r\n    Riverside: [-117.3962, 33.9806],\r\n    Gilbert: [-111.789, 33.3528],\r\n    Buffalo: [-78.8784, 42.8864],\r\n    Newark: [-74.1724, 40.7357],\r\n    Bakersfield: [-119.0187, 35.3733],\r\n    Tulsa: [-95.9928, 36.1539],\r\n    Atlanta: [-84.388, 33.749],\r\n    Minneapolis: [-93.265, 44.9778],\r\n    Greensboro: [-79.791, 36.0726],\r\n    \"San Diego\": [-117.1611, 32.7157],\r\n    Baltimore: [-76.6122, 39.2904],\r\n    Chattanooga: [-85.3097, 35.0456],\r\n    \"New York\": [-74.006, 40.7128],\r\n    Nashville: [-86.7816, 36.1627],\r\n    \"Oklahoma City\": [-97.5164, 35.4676],\r\n    Garland: [-96.6389, 32.9126],\r\n    \"St. Petersburg\": [-82.6403, 27.7676],\r\n    Orlando: [-81.3792, 28.5383],\r\n    Honolulu: [-157.8583, 21.3069],\r\n    \"St. Louis\": [-90.1994, 38.627],\r\n    Tampa: [-82.4572, 27.9506],\r\n    Charlotte: [-80.8431, 35.2271],\r\n    Phoenix: [-112.074, 33.4484],\r\n    Portland: [-122.6765, 45.5051],\r\n    Philadelphia: [-75.1652, 39.9526],\r\n    Glendale: [-112.185, 33.5387],\r\n    Miami: [-80.1918, 25.7617],\r\n    Cleveland: [-81.6944, 41.4993],\r\n    Lincoln: [-96.6852, 40.8136],\r\n    Arlington: [-97.1081, 32.7357],\r\n    Indianapolis: [-86.1581, 39.7684],\r\n    \"Fort Wayne\": [-85.1394, 41.0793],\r\n    Anaheim: [-117.9143, 33.8366],\r\n    Madison: [-89.4012, 43.0731],\r\n    Raleigh: [-78.6382, 35.7796],\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <svg width=\"960\" height=\"500\">\r\n        {worldMap.map((d, i) => (\r\n          <path\r\n            key={`path-${i}`}\r\n            d={pathGenerator(d)}\r\n            fill={`rgba(64, 145, 91,${(1 / worldMap.length) * i})`}\r\n            stroke=\"#FFFFFF\"\r\n            strokeWidth={0.5}\r\n          />\r\n        ))}\r\n\r\n        {citiesData.map((city, i) => {\r\n          const coordinates = cityCoordinates[city._id];\r\n          if (coordinates) {\r\n            const [x, y] = projection(coordinates);\r\n            return (\r\n              <circle\r\n                key={`circle-${i}`}\r\n                cx={x}\r\n                cy={y}\r\n                r={Math.sqrt(city.count) * 2}\r\n                fill=\"rgba(255,0,0,0.6)\"\r\n                stroke=\"#FFFFFF\"\r\n                strokeWidth={0.5}\r\n              >\r\n                <title>{`${city._id}: ${city.count}`}</title>\r\n              </circle>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}