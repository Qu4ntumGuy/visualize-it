{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\geoDistribute.js\";\nimport React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\n// export const data = [\n//   [\"Country\", \"Customer Count\"],\n//   [\"Germany\", 200],\n//   [\"United States\", 300],\n//   [\"Brazil\", 400],\n//   [\"Canada\", 500],\n//   [\"France\", 600],\n//   [\"RU\", 700],\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GeoChart({\n  geoData\n}) {\n  const data = geoData.map(item => [item._id, item.count]);\n  data.unshift([\"Country\", \"Customer Count\"]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartEvents: [{\n      eventName: \"select\",\n      callback: ({\n        chartWrapper\n      }) => {\n        const chart = chartWrapper.getChart();\n        const selection = chart.getSelection();\n        if (selection.length === 0) return;\n        const region = data[selection[0].row + 1];\n        console.log(\"Selected : \" + region);\n      }\n    }],\n    chartType: \"GeoChart\",\n    width: \"100%\",\n    height: \"400px\",\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = GeoChart;\nvar _c;\n$RefreshReg$(_c, \"GeoChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","GeoChart","geoData","data","map","item","_id","count","unshift","console","log","chartEvents","eventName","callback","chartWrapper","chart","getChart","selection","getSelection","length","region","row","chartType","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/geoDistribute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n// export const data = [\r\n//   [\"Country\", \"Customer Count\"],\r\n//   [\"Germany\", 200],\r\n//   [\"United States\", 300],\r\n//   [\"Brazil\", 400],\r\n//   [\"Canada\", 500],\r\n//   [\"France\", 600],\r\n//   [\"RU\", 700],\r\n// ];\r\n\r\nexport default function GeoChart({ geoData }) {\r\n  const data = geoData.map((item) => [item._id, item.count]);\r\n\r\n  data.unshift([\"Country\", \"Customer Count\"]);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <Chart\r\n      chartEvents={[\r\n        {\r\n          eventName: \"select\",\r\n          callback: ({ chartWrapper }) => {\r\n            const chart = chartWrapper.getChart();\r\n            const selection = chart.getSelection();\r\n            if (selection.length === 0) return;\r\n            const region = data[selection[0].row + 1];\r\n            console.log(\"Selected : \" + region);\r\n          },\r\n        },\r\n      ]}\r\n      chartType=\"GeoChart\"\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      data={data}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAC5C,MAAMC,IAAI,GAAGD,OAAO,CAACE,GAAG,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAC,CAAC;EAE1DJ,IAAI,CAACK,OAAO,CAAC,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;EAE3CC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EAEjB,oBACEH,OAAA,CAACF,KAAK;IACJa,WAAW,EAAE,CACX;MACEC,SAAS,EAAE,QAAQ;MACnBC,QAAQ,EAAEA,CAAC;QAAEC;MAAa,CAAC,KAAK;QAC9B,MAAMC,KAAK,GAAGD,YAAY,CAACE,QAAQ,CAAC,CAAC;QACrC,MAAMC,SAAS,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;QACtC,IAAID,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;QAC5B,MAAMC,MAAM,GAAGjB,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAACI,GAAG,GAAG,CAAC,CAAC;QACzCZ,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGU,MAAM,CAAC;MACrC;IACF,CAAC,CACD;IACFE,SAAS,EAAC,UAAU;IACpBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdrB,IAAI,EAAEA;EAAK;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN;AAACC,EAAA,GA3BuB5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}