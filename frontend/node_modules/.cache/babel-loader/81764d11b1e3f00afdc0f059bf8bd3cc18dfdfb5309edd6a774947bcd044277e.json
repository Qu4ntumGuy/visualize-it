{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\GeoDistribute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Chart } from \"react-chartjs-2\";\nimport { ChoroplethController, GeoFeature } from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register the necessary components with Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ChoroplethController, GeoFeature);\nconst GeoDistribute = ({\n  fetchedData\n}) => {\n  const citiesData = fetchedData;\n  const mapData = citiesData.map(city => ({\n    feature: city._id,\n    value: city.count\n  }));\n  const data = {\n    labels: citiesData.map(city => city._id),\n    datasets: [{\n      label: \"Customer Distribution by City\",\n      data: mapData\n    }]\n  };\n  const options = {\n    scales: {\n      xy: {\n        projection: \"equalEarth\" // or another projection type\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"choropleth\",\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = GeoDistribute;\nexport default GeoDistribute;\nvar _c;\n$RefreshReg$(_c, \"GeoDistribute\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChoroplethController","GeoFeature","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","GeoDistribute","fetchedData","citiesData","mapData","map","city","feature","_id","value","count","data","labels","datasets","label","options","scales","xy","projection","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/GeoDistribute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { ChoroplethController, GeoFeature } from \"chartjs-chart-geo\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the necessary components with Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChoroplethController,\r\n  GeoFeature\r\n);\r\n\r\nconst GeoDistribute = ({ fetchedData }) => {\r\n  const citiesData = fetchedData;\r\n\r\n  const mapData = citiesData.map((city) => ({\r\n    feature: city._id,\r\n    value: city.count,\r\n  }));\r\n\r\n  const data = {\r\n    labels: citiesData.map((city) => city._id),\r\n    datasets: [\r\n      {\r\n        label: \"Customer Distribution by City\",\r\n        data: mapData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      xy: {\r\n        projection: \"equalEarth\", // or another projection type\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart type=\"choropleth\" data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeoDistribute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,oBAAoB,EAAEC,UAAU,QAAQ,mBAAmB;AAEpE,SACEF,KAAK,IAAIG,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNT,oBAAoB,EACpBC,UACF,CAAC;AAED,MAAMY,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACzC,MAAMC,UAAU,GAAGD,WAAW;EAE9B,MAAME,OAAO,GAAGD,UAAU,CAACE,GAAG,CAAEC,IAAI,KAAM;IACxCC,OAAO,EAAED,IAAI,CAACE,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI;EACd,CAAC,CAAC,CAAC;EAEH,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAET,UAAU,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,GAAG,CAAC;IAC1CK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,+BAA+B;MACtCH,IAAI,EAAEP;IACR,CAAC;EAEL,CAAC;EAED,MAAMW,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,EAAE,EAAE;QACFC,UAAU,EAAE,YAAY,CAAE;MAC5B;IACF;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACZ,KAAK;MAACiC,IAAI,EAAC,YAAY;MAACT,IAAI,EAAEA,IAAK;MAACI,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACC,EAAA,GA/BIxB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}