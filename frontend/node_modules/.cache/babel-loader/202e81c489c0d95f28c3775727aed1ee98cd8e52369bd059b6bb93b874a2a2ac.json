{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\geoDistribute.js\";\nimport React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const data = [[\"Country\", \"Customer Count\"], [\"Germany\", 200], [\"United States\", 300], [\"Brazil\", 400], [\"Canada\", 500], [\"France\", 600], [\"RU\", 700], [\"India\", 1100]];\nexport default function GeoChart({\n  geoData\n}) {\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartEvents: [{\n      eventName: \"select\",\n      callback: ({\n        chartWrapper\n      }) => {\n        const chart = chartWrapper.getChart();\n        const selection = chart.getSelection();\n        if (selection.length === 0) return;\n        const region = data[selection[0].row + 1];\n        console.log(\"Selected : \" + region);\n      }\n    }],\n    chartType: \"GeoChart\",\n    width: \"100%\",\n    height: \"400px\",\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = GeoChart;\nvar _c;\n$RefreshReg$(_c, \"GeoChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","data","GeoChart","geoData","chartEvents","eventName","callback","chartWrapper","chart","getChart","selection","getSelection","length","region","row","console","log","chartType","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/geoDistribute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport const data = [\r\n  [\"Country\", \"Customer Count\"],\r\n  [\"Germany\", 200],\r\n  [\"United States\", 300],\r\n  [\"Brazil\", 400],\r\n  [\"Canada\", 500],\r\n  [\"France\", 600],\r\n  [\"RU\", 700],\r\n  [\"India\", 1100],\r\n];\r\n\r\nexport default function GeoChart({ geoData }) {\r\n  return (\r\n    <Chart\r\n      chartEvents={[\r\n        {\r\n          eventName: \"select\",\r\n          callback: ({ chartWrapper }) => {\r\n            const chart = chartWrapper.getChart();\r\n            const selection = chart.getSelection();\r\n            if (selection.length === 0) return;\r\n            const region = data[selection[0].row + 1];\r\n            console.log(\"Selected : \" + region);\r\n          },\r\n        },\r\n      ]}\r\n      chartType=\"GeoChart\"\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      data={data}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,IAAI,GAAG,CAClB,CAAC,SAAS,EAAE,gBAAgB,CAAC,EAC7B,CAAC,SAAS,EAAE,GAAG,CAAC,EAChB,CAAC,eAAe,EAAE,GAAG,CAAC,EACtB,CAAC,QAAQ,EAAE,GAAG,CAAC,EACf,CAAC,QAAQ,EAAE,GAAG,CAAC,EACf,CAAC,QAAQ,EAAE,GAAG,CAAC,EACf,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,CAAC,OAAO,EAAE,IAAI,CAAC,CAChB;AAED,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAC5C,oBACEH,OAAA,CAACF,KAAK;IACJM,WAAW,EAAE,CACX;MACEC,SAAS,EAAE,QAAQ;MACnBC,QAAQ,EAAEA,CAAC;QAAEC;MAAa,CAAC,KAAK;QAC9B,MAAMC,KAAK,GAAGD,YAAY,CAACE,QAAQ,CAAC,CAAC;QACrC,MAAMC,SAAS,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;QACtC,IAAID,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;QAC5B,MAAMC,MAAM,GAAGZ,IAAI,CAACS,SAAS,CAAC,CAAC,CAAC,CAACI,GAAG,GAAG,CAAC,CAAC;QACzCC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGH,MAAM,CAAC;MACrC;IACF,CAAC,CACD;IACFI,SAAS,EAAC,UAAU;IACpBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdlB,IAAI,EAAEA;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN;AAACC,EAAA,GArBuBtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}