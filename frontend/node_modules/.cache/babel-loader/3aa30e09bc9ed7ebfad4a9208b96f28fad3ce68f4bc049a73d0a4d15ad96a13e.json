{"ast":null,"code":"import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register the necessary components with Chart.js\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst TotalSales = (dataType, fetchedData) => {\n  console.log(fetchedData, dataType);\n  // const labels = salesData.map((item) =>\n  //   dataType === \"monthly\"\n  //     ? `${item._id.month}/${item._id.year}`\n  //     : `${item._id.quarter} ${item._id.year}`\n  // );\n\n  // const data = {\n  //   labels,\n  //   datasets: [\n  //     {\n  //       label: \"Total Sales\",\n  //       data: salesData.map((item) => item.totalSales),\n  //       borderColor: \"rgba(75, 192, 192, 1)\",\n  //       backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n  //       fill: true,\n  //       tension: 0.3,\n  //     },\n  //     {\n  //       label: \"Sales Count\",\n  //       data: salesData.map((item) => item.count),\n  //       borderColor: \"rgba(153, 102, 255, 1)\",\n  //       backgroundColor: \"rgba(153, 102, 255, 0.2)\",\n  //       fill: true,\n  //       tension: 0.3,\n  //     },\n  //   ],\n  // };\n\n  // const options = {\n  //   responsive: true,\n  //   plugins: {\n  //     legend: {\n  //       position: \"top\",\n  //     },\n  //     title: {\n  //       display: true,\n  //       text: `Sales Data (${\n  //         dataType === \"monthly\" ? \"Monthly\" : \"Quarterly\"\n  //       })`,\n  //     },\n  //   },\n  //   scales: {\n  //     y: {\n  //       beginAtZero: true,\n  //     },\n  //   },\n  // };\n\n  // return <Line data={data} options={options} />;\n};\n_c = TotalSales;\nexport default TotalSales;\nvar _c;\n$RefreshReg$(_c, \"TotalSales\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","TotalSales","dataType","fetchedData","console","log","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/TotalSales.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the necessary components with Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst TotalSales = (dataType, fetchedData) => {\r\n  console.log(fetchedData, dataType);\r\n  // const labels = salesData.map((item) =>\r\n  //   dataType === \"monthly\"\r\n  //     ? `${item._id.month}/${item._id.year}`\r\n  //     : `${item._id.quarter} ${item._id.year}`\r\n  // );\r\n\r\n  // const data = {\r\n  //   labels,\r\n  //   datasets: [\r\n  //     {\r\n  //       label: \"Total Sales\",\r\n  //       data: salesData.map((item) => item.totalSales),\r\n  //       borderColor: \"rgba(75, 192, 192, 1)\",\r\n  //       backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n  //       fill: true,\r\n  //       tension: 0.3,\r\n  //     },\r\n  //     {\r\n  //       label: \"Sales Count\",\r\n  //       data: salesData.map((item) => item.count),\r\n  //       borderColor: \"rgba(153, 102, 255, 1)\",\r\n  //       backgroundColor: \"rgba(153, 102, 255, 0.2)\",\r\n  //       fill: true,\r\n  //       tension: 0.3,\r\n  //     },\r\n  //   ],\r\n  // };\r\n\r\n  // const options = {\r\n  //   responsive: true,\r\n  //   plugins: {\r\n  //     legend: {\r\n  //       position: \"top\",\r\n  //     },\r\n  //     title: {\r\n  //       display: true,\r\n  //       text: `Sales Data (${\r\n  //         dataType === \"monthly\" ? \"Monthly\" : \"Quarterly\"\r\n  //       })`,\r\n  //     },\r\n  //   },\r\n  //   scales: {\r\n  //     y: {\r\n  //       beginAtZero: true,\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n  // return <Line data={data} options={options} />;\r\n};\r\n\r\nexport default TotalSales;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AACAP,OAAO,CAACQ,QAAQ,CACdP,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAME,UAAU,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;EAC5CC,OAAO,CAACC,GAAG,CAACF,WAAW,EAAED,QAAQ,CAAC;EAClC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC;AAACI,EAAA,GAnDIL,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}