{"ast":null,"code":"import React from\"react\";import{Line}from\"react-chartjs-2\";import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from\"chart.js\";// Register the necessary components with Chart.js\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const TotalSales=_ref=>{let{dataType,fetchedData}=_ref;// console.log(dataType);\nconst salesData=fetchedData;console.log(salesData);const labels=salesData.map(item=>dataType===\"dailyTotalSales\"?`${item._id.day}/${item._id.month}/${item._id.year}`:dataType===\"monthlyTotalSales\"?`${item._id.month}/${item._id.year}`:dataType===\"quarterlyTotalSales\"?`${item._id.quarter} ${item._id.year}`:`${item._id.year}`);const data={labels,datasets:[{label:\"Total Sales\",data:salesData.map(item=>item.totalSales),borderColor:\"rgba(75, 192, 192, 1)\",backgroundColor:\"rgba(75, 192, 192, 0.3)\",fill:true,tension:0.3},{label:\"Sales Count\",data:salesData.map(item=>item.count),borderColor:\"rgba(153, 102, 255, 1)\",backgroundColor:\"rgba(153, 102, 255, 0.2)\",fill:true,tension:0.3}]};const options={responsive:true,plugins:{legend:{position:\"top\"},title:{display:true,text:`Sales Data (${dataType.charAt(0).toUpperCase()+dataType.slice(1)})`}},// scales: {\n//   y: {\n//     beginAtZero: true,\n//   },\n// },\nscales:{y:{beginAtZero:true,title:{display:true,text:\"Sales\",font:{size:16}}},x:{title:{display:true,text:`Time Period (${dataType===\"dailyTotalSales\"?\"Day\":dataType===\"monthlyTotalSales\"?\"Month\":dataType===\"quarterlyTotalSales\"?\"Quarter\":\"Year\"})`,font:{size:16}}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-md shadow-lg\",children:[/*#__PURE__*/_jsx(Line,{data:data,options:options}),\";\"]});};export default TotalSales;","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","TotalSales","_ref","dataType","fetchedData","salesData","console","log","labels","map","item","_id","day","month","year","quarter","data","datasets","label","totalSales","borderColor","backgroundColor","fill","tension","count","options","responsive","plugins","legend","position","title","display","text","charAt","toUpperCase","slice","scales","y","beginAtZero","font","size","x","className","children"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/TotalSales.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the necessary components with Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst TotalSales = ({ dataType, fetchedData }) => {\r\n  // console.log(dataType);\r\n  const salesData = fetchedData;\r\n  console.log(salesData);\r\n\r\n  const labels = salesData.map((item) =>\r\n    dataType === \"dailyTotalSales\"\r\n      ? `${item._id.day}/${item._id.month}/${item._id.year}`\r\n      : dataType === \"monthlyTotalSales\"\r\n      ? `${item._id.month}/${item._id.year}`\r\n      : dataType === \"quarterlyTotalSales\"\r\n      ? `${item._id.quarter} ${item._id.year}`\r\n      : `${item._id.year}`\r\n  );\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Total Sales\",\r\n        data: salesData.map((item) => item.totalSales),\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        backgroundColor: \"rgba(75, 192, 192, 0.3)\",\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n      {\r\n        label: \"Sales Count\",\r\n        data: salesData.map((item) => item.count),\r\n        borderColor: \"rgba(153, 102, 255, 1)\",\r\n        backgroundColor: \"rgba(153, 102, 255, 0.2)\",\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Sales Data (${\r\n          dataType.charAt(0).toUpperCase() + dataType.slice(1)\r\n        })`,\r\n      },\r\n    },\r\n    // scales: {\r\n    //   y: {\r\n    //     beginAtZero: true,\r\n    //   },\r\n    // },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: \"Sales\",\r\n          font: {\r\n            size: 16,\r\n          },\r\n        },\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: `Time Period (${\r\n            dataType === \"dailyTotalSales\"\r\n              ? \"Day\"\r\n              : dataType === \"monthlyTotalSales\"\r\n              ? \"Month\"\r\n              : dataType === \"quarterlyTotalSales\"\r\n              ? \"Quarter\"\r\n              : \"Year\"\r\n          })`,\r\n          font: {\r\n            size: 16,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-md shadow-lg\">\r\n      <Line data={data} options={options} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalSales;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}