{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\MapChart.js\",\n  _s = $RefreshSig$();\nimport * as topojson from \"topojson-client\";\nimport { geoPath, geoMercator } from \"d3-geo\";\nimport { select } from \"d3-selection\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapChart = ({\n  data\n}) => {\n  _s();\n  const [worldMap, setWorldMap] = useState([]);\n  useEffect(() => {\n    if (data && data.objects && data.objects.countries) {\n      const features = topojson.feature(data, data.objects.countries).features;\n      setWorldMap(features);\n    } else {\n      console.error(\"Data is not in the expected format:\", data);\n    }\n  }, [data]);\n  const projection = geoMercator();\n  const pathGenerator = geoPath().projection(projection);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"960\",\n      height: \"500\",\n      children: worldMap.map((d, i) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathGenerator(d),\n        fill: `rgba(38,50,56,${1 / worldMap.length * i})`,\n        stroke: \"#FFFFFF\",\n        strokeWidth: 0.5\n      }, `path-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MapChart, \"e5tTkfylOXLrWHSlR1T/lOiw/po=\");\n_c = MapChart;\nexport default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["topojson","geoPath","geoMercator","select","useEffect","useState","jsxDEV","_jsxDEV","MapChart","data","_s","worldMap","setWorldMap","objects","countries","features","feature","console","error","projection","pathGenerator","className","children","width","height","map","d","i","fill","length","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/MapChart.js"],"sourcesContent":["import * as topojson from \"topojson-client\";\r\nimport { geoPath, geoMercator } from \"d3-geo\";\r\nimport { select } from \"d3-selection\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst MapChart = ({ data }) => {\r\n  const [worldMap, setWorldMap] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.objects && data.objects.countries) {\r\n      const features = topojson.feature(data, data.objects.countries).features;\r\n      setWorldMap(features);\r\n    } else {\r\n      console.error(\"Data is not in the expected format:\", data);\r\n    }\r\n  }, [data]);\r\n\r\n  const projection = geoMercator();\r\n  const pathGenerator = geoPath().projection(projection);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <svg width=\"960\" height=\"500\">\r\n        {worldMap.map((d, i) => (\r\n          <path\r\n            key={`path-${i}`}\r\n            d={pathGenerator(d)}\r\n            fill={`rgba(38,50,56,${(1 / worldMap.length) * i})`}\r\n            stroke=\"#FFFFFF\"\r\n            strokeWidth={0.5}\r\n          />\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,QAAQ,MAAM,iBAAiB;AAC3C,SAASC,OAAO,EAAEC,WAAW,QAAQ,QAAQ;AAC7C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAIK,IAAI,IAAIA,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACI,OAAO,CAACC,SAAS,EAAE;MAClD,MAAMC,QAAQ,GAAGf,QAAQ,CAACgB,OAAO,CAACP,IAAI,EAAEA,IAAI,CAACI,OAAO,CAACC,SAAS,CAAC,CAACC,QAAQ;MACxEH,WAAW,CAACG,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLE,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAET,IAAI,CAAC;IAC5D;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMU,UAAU,GAAGjB,WAAW,CAAC,CAAC;EAChC,MAAMkB,aAAa,GAAGnB,OAAO,CAAC,CAAC,CAACkB,UAAU,CAACA,UAAU,CAAC;EAEtD,oBACEZ,OAAA;IAAKc,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCf,OAAA;MAAKgB,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAAAF,QAAA,EAC1BX,QAAQ,CAACc,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjBpB,OAAA;QAEEmB,CAAC,EAAEN,aAAa,CAACM,CAAC,CAAE;QACpBE,IAAI,EAAE,iBAAkB,CAAC,GAAGjB,QAAQ,CAACkB,MAAM,GAAIF,CAAC,GAAI;QACpDG,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAE;MAAI,GAJZ,QAAQJ,CAAC,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9BIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}