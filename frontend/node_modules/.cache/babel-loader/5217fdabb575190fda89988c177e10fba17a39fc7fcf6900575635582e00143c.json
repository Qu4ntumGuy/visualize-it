{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\geoDistribute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Chart } from \"react-chartjs-2\";\nimport { ChoroplethController, ColorScale, GeoFeature, ProjectionScale } from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, registerables } from \"chart.js\";\n\n// Register the necessary components with Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ...registerables, ChoroplethController, GeoFeature, ProjectionScale, ColorScale);\nconst GeoDistribute = ({\n  fetchedData\n}) => {\n  const citiesData = fetchedData;\n  console.log(citiesData);\n  const mapData = citiesData.map(city => ({\n    feature: city._id,\n    // This should be the city name\n    value: city.count // The count of customers in that city\n  }));\n  const data = {\n    labels: citiesData.map(city => city._id),\n    datasets: [{\n      label: \"Customer Distribution by City\",\n      outline: {\n        borderColor: \"#000\"\n      },\n      data: citiesData.map(city => ({\n        feature: city._id,\n        value: city.count\n      })),\n      borderWidth: 1,\n      outline: {\n        borderColor: \"#000\"\n      }\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: \"Customer Distribution by City\"\n      }\n    },\n    scales: {\n      projection: {\n        projection: \"mercator\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \" mercator\",\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c = GeoDistribute;\nexport default GeoDistribute;\nvar _c;\n$RefreshReg$(_c, \"GeoDistribute\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChoroplethController","ColorScale","GeoFeature","ProjectionScale","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","registerables","jsxDEV","_jsxDEV","register","GeoDistribute","fetchedData","citiesData","console","log","mapData","map","city","feature","_id","value","count","data","labels","datasets","label","outline","borderColor","borderWidth","options","plugins","legend","display","title","text","scales","projection","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/geoDistribute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport {\r\n  ChoroplethController,\r\n  ColorScale,\r\n  GeoFeature,\r\n  ProjectionScale,\r\n} from \"chartjs-chart-geo\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  registerables,\r\n} from \"chart.js\";\r\n\r\n// Register the necessary components with Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ...registerables,\r\n  ChoroplethController,\r\n  GeoFeature,\r\n  ProjectionScale,\r\n  ColorScale\r\n);\r\n\r\nconst GeoDistribute = ({ fetchedData }) => {\r\n  const citiesData = fetchedData;\r\n  console.log(citiesData);\r\n  const mapData = citiesData.map((city) => ({\r\n    feature: city._id, // This should be the city name\r\n    value: city.count, // The count of customers in that city\r\n  }));\r\n\r\n  const data = {\r\n    labels: citiesData.map((city) => city._id),\r\n    datasets: [\r\n      {\r\n        label: \"Customer Distribution by City\",\r\n        outline: { borderColor: \"#000\" },\r\n\r\n        data: citiesData.map((city) => ({\r\n          feature: city._id,\r\n          value: city.count,\r\n        })),\r\n        borderWidth: 1,\r\n        outline: { borderColor: \"#000\" },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Customer Distribution by City\",\r\n      },\r\n    },\r\n    scales: {\r\n      projection: {\r\n        projection: \"mercator\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart type=\" mercator\" data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeoDistribute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACEC,oBAAoB,EACpBC,UAAU,EACVC,UAAU,EACVC,eAAe,QACV,mBAAmB;AAE1B,SACEJ,KAAK,IAAIK,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,aAAa,QACR,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACN,GAAGC,aAAa,EAChBZ,oBAAoB,EACpBE,UAAU,EACVC,eAAe,EACfF,UACF,CAAC;AAED,MAAMe,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACzC,MAAMC,UAAU,GAAGD,WAAW;EAC9BE,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACvB,MAAMG,OAAO,GAAGH,UAAU,CAACI,GAAG,CAAEC,IAAI,KAAM;IACxCC,OAAO,EAAED,IAAI,CAACE,GAAG;IAAE;IACnBC,KAAK,EAAEH,IAAI,CAACI,KAAK,CAAE;EACrB,CAAC,CAAC,CAAC;EAEH,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAEX,UAAU,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,GAAG,CAAC;IAC1CK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,+BAA+B;MACtCC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAO,CAAC;MAEhCL,IAAI,EAAEV,UAAU,CAACI,GAAG,CAAEC,IAAI,KAAM;QAC9BC,OAAO,EAAED,IAAI,CAACE,GAAG;QACjBC,KAAK,EAAEH,IAAI,CAACI;MACd,CAAC,CAAC,CAAC;MACHO,WAAW,EAAE,CAAC;MACdF,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAO;IACjC,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,UAAU,EAAE;QACVA,UAAU,EAAE;MACd;IACF;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,eACE7B,OAAA,CAACf,KAAK;MAAC6C,IAAI,EAAC,WAAW;MAAChB,IAAI,EAAEA,IAAK;MAACO,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACC,EAAA,GA/CIjC,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}