{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\visualize-it\\\\frontend\\\\src\\\\Components\\\\TotalSales.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register the necessary components with Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst TotalSales = ({\n  dataType,\n  fetchedData\n}) => {\n  console.log(dataType);\n  const salesData = fetchedData;\n  const labels = salesData.map(item => dataType === \"daily\" ? `${item._id.day}/${item._id.month}/${item._id.year}` : dataType === \"monthly\" ? `${item._id.month}/${item._id.year}` : `Q${item._id.quarter} ${item._id.year}`);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Total Sales\",\n      data: salesData.map(item => item.totalSales),\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      fill: true,\n      tension: 0.3\n    }, {\n      label: \"Sales Count\",\n      data: salesData.map(item => item.count),\n      borderColor: \"rgba(153, 102, 255, 1)\",\n      backgroundColor: \"rgba(153, 102, 255, 0.2)\",\n      fill: true,\n      tension: 0.3\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: `Sales Data (${dataType.charAt(0).toUpperCase() + dataType.slice(1)})`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n_c = TotalSales;\nexport default TotalSales;\nvar _c;\n$RefreshReg$(_c, \"TotalSales\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TotalSales","dataType","fetchedData","console","log","salesData","labels","map","item","_id","day","month","year","quarter","data","datasets","label","totalSales","borderColor","backgroundColor","fill","tension","count","options","responsive","plugins","legend","position","title","display","text","charAt","toUpperCase","slice","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/Components/TotalSales.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the necessary components with Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst TotalSales = ({ dataType, fetchedData }) => {\r\n  console.log(dataType);\r\n  const salesData = fetchedData;\r\n  const labels = salesData.map((item) =>\r\n    dataType === \"daily\"\r\n      ? `${item._id.day}/${item._id.month}/${item._id.year}`\r\n      : dataType === \"monthly\"\r\n      ? `${item._id.month}/${item._id.year}`\r\n      : `Q${item._id.quarter} ${item._id.year}`\r\n  );\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Total Sales\",\r\n        data: salesData.map((item) => item.totalSales),\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n      {\r\n        label: \"Sales Count\",\r\n        data: salesData.map((item) => item.count),\r\n        borderColor: \"rgba(153, 102, 255, 1)\",\r\n        backgroundColor: \"rgba(153, 102, 255, 0.2)\",\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Sales Data (${\r\n          dataType.charAt(0).toUpperCase() + dataType.slice(1)\r\n        })`,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={data} options={options} />;\r\n};\r\n\r\nexport default TotalSales;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAChDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,MAAMI,SAAS,GAAGH,WAAW;EAC7B,MAAMI,MAAM,GAAGD,SAAS,CAACE,GAAG,CAAEC,IAAI,IAChCP,QAAQ,KAAK,OAAO,GAChB,GAAGO,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIF,IAAI,CAACC,GAAG,CAACE,KAAK,IAAIH,IAAI,CAACC,GAAG,CAACG,IAAI,EAAE,GACpDX,QAAQ,KAAK,SAAS,GACtB,GAAGO,IAAI,CAACC,GAAG,CAACE,KAAK,IAAIH,IAAI,CAACC,GAAG,CAACG,IAAI,EAAE,GACpC,IAAIJ,IAAI,CAACC,GAAG,CAACI,OAAO,IAAIL,IAAI,CAACC,GAAG,CAACG,IAAI,EAC3C,CAAC;EAED,MAAME,IAAI,GAAG;IACXR,MAAM;IACNS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBF,IAAI,EAAET,SAAS,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACS,UAAU,CAAC;MAC9CC,WAAW,EAAE,uBAAuB;MACpCC,eAAe,EAAE,yBAAyB;MAC1CC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC,EACD;MACEL,KAAK,EAAE,aAAa;MACpBF,IAAI,EAAET,SAAS,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACc,KAAK,CAAC;MACzCJ,WAAW,EAAE,wBAAwB;MACrCC,eAAe,EAAE,0BAA0B;MAC3CC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,eACJ7B,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/B,QAAQ,CAACgC,KAAK,CAAC,CAAC,CAAC;MAExD;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAOtC,OAAA,CAACX,IAAI;IAAC2B,IAAI,EAAEA,IAAK;IAACS,OAAO,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAtDIzC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}