{"ast":null,"code":"import axios from\"axios\";import TotalSales from\"./Components/TotalSales\";import{useEffect,useState}from\"react\";import Dropdown from\"./Components/Dropdown\";import GrowthRate from\"./Components/GrowthRate\";import NewCustomer from\"./Components/NewCustomer\";import GeoDistribute from\"./Components/geoDistribute\";import MapChart from\"./Components/MapChart\";import GeoChart from\"./Components/geoDistribute\";import CohortChart from\"./Components/CohortChart\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[data,setData]=useState([]);// const [dataType, setDataType] = useState(\"monthly\");\nconst[chartData,setChartData]=useState([]);const[newCustomer,setNewCustomer]=useState([]);const[inputType,setInputType]=useState(\"monthlyTotalSales\");const[range,setRange]=useState(\"3years\");const[geoData,setGeoData]=useState([]);const[countries,setCountries]=useState([]);const[cohort,setCohort]=useState([]);const handleSelect=option=>{setInputType(option);};const handleLast=option=>{setRange(option);};const fetchGrowthRateData=async()=>{try{const response=await axios.get(\"http://localhost:8000/api/growthRate\");// console.log(response.data.data);\nsetChartData(response.data.data);}catch(error){console.error(error);}};const fetchSalesData=async()=>{try{const response=await axios.get(`http://localhost:8000/api/${inputType}`);// console.log(response.data.data);\nsetData(response.data.data);}catch(error){console.error(error);}};const fetchNewCustomerData=async()=>{try{const body={range:range};const response=await axios.post(`http://localhost:8000/api/newCustomer`,body);// console.log(response.data.data);\nsetNewCustomer(response.data.data);}catch(error){}};const fetchGeoDistribution=async()=>{try{const response=await axios.get(\"http://localhost:8000/api/geoDistribute\");// console.log(response.data.data);\nsetGeoData(response.data.data);}catch(error){console.error(error);}};const fetchGeoMaps=async()=>{try{const response=await axios.get(\"https://cdn.jsdelivr.net/npm/world-atlas/countries-50m.json\");// console.log(response.data.objects);\nsetCountries(response.data);// setGeoData(response.data.data);\n}catch(error){console.error(error);}};const fetchCohortData=async()=>{try{const response=await axios.get(\"http://localhost:8000/api/purchase\");console.log(response.data.data);setCohort(response.data.data);}catch(error){console.error(error);}};useEffect(()=>{fetchSalesData();fetchGrowthRateData();fetchNewCustomerData();fetchGeoDistribution();fetchGeoMaps();fetchCohortData();},[inputType,range]);return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen overflow-hidden\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen overflow-y-auto p-2 max-w-7xl mx-auto scrollbar-hide\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\" text-2xl font-semibold\",children:\"Total Sales Over Time\"}),/*#__PURE__*/_jsx(\"div\",{className:\" w-1/4 my-5\",children:/*#__PURE__*/_jsx(Dropdown,{options:[{value:\"monthlyTotalSales\",label:\"Monthly\"},{value:\"dailyTotalSales\",label:\"Daily\"},{value:\"quarterlyTotalSales\",label:\"Quarterly\"},{value:\"yearlyTotalSales\",label:\"Yearly\"}],onSelect:handleSelect})}),/*#__PURE__*/_jsx(TotalSales,{dataType:inputType,fetchedData:data})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-10\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-semibold mb-5\",children:\"Sales Growth Rate Over Time\"}),/*#__PURE__*/_jsx(GrowthRate,{fetchedData:chartData})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-10\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-semibold mb-5\",children:\"New Customers Added Over Time\"}),/*#__PURE__*/_jsx(\"div\",{className:\" w-1/4 my-5\",children:/*#__PURE__*/_jsx(Dropdown,{options:[{value:\"3years\",label:\"Last 3 Years\"},{value:\"7days\",label:\"Last 7 Days\"},{value:\"1month\",label:\"Last 1 Month\"},{value:\"6months\",label:\"Last 6 Months\"},{value:\"1year\",label:\"Last 1 Year\"},{value:\"2years\",label:\"Last 2 Years\"},{value:\"4years\",label:\"Last 4 Years\"},{value:\"5years\",label:\"Last 5 Years\"}],onSelect:handleLast})}),/*#__PURE__*/_jsx(NewCustomer,{fetchedData:newCustomer})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-10\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-semibold mb-5\",children:\"Geographical Distribution of Customers\"}),/*#__PURE__*/_jsx(MapChart,{data:countries,citiesData:geoData})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-10\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-semibold mb-5\",children:\"Cohort Analysis\"}),/*#__PURE__*/_jsx(CohortChart,{data:cohort})]})]})});}export default App;","map":{"version":3,"names":["axios","TotalSales","useEffect","useState","Dropdown","GrowthRate","NewCustomer","GeoDistribute","MapChart","GeoChart","CohortChart","jsx","_jsx","jsxs","_jsxs","App","data","setData","chartData","setChartData","newCustomer","setNewCustomer","inputType","setInputType","range","setRange","geoData","setGeoData","countries","setCountries","cohort","setCohort","handleSelect","option","handleLast","fetchGrowthRateData","response","get","error","console","fetchSalesData","fetchNewCustomerData","body","post","fetchGeoDistribution","fetchGeoMaps","fetchCohortData","log","className","children","options","value","label","onSelect","dataType","fetchedData","citiesData"],"sources":["D:/Windows/Web Apps/visualize-it/frontend/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport TotalSales from \"./Components/TotalSales\";\nimport { useEffect, useState } from \"react\";\nimport Dropdown from \"./Components/Dropdown\";\nimport GrowthRate from \"./Components/GrowthRate\";\nimport NewCustomer from \"./Components/NewCustomer\";\nimport GeoDistribute from \"./Components/geoDistribute\";\nimport MapChart from \"./Components/MapChart\";\nimport GeoChart from \"./Components/geoDistribute\";\nimport CohortChart from \"./Components/CohortChart\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  // const [dataType, setDataType] = useState(\"monthly\");\n  const [chartData, setChartData] = useState([]);\n  const [newCustomer, setNewCustomer] = useState([]);\n  const [inputType, setInputType] = useState(\"monthlyTotalSales\");\n  const [range, setRange] = useState(\"3years\");\n  const [geoData, setGeoData] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [cohort, setCohort] = useState([]);\n\n  const handleSelect = (option) => {\n    setInputType(option);\n  };\n\n  const handleLast = (option) => {\n    setRange(option);\n  };\n\n  const fetchGrowthRateData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/growthRate\");\n      // console.log(response.data.data);\n      setChartData(response.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchSalesData = async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8000/api/${inputType}`\n      );\n      // console.log(response.data.data);\n      setData(response.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchNewCustomerData = async () => {\n    try {\n      const body = {\n        range: range,\n      };\n      const response = await axios.post(\n        `http://localhost:8000/api/newCustomer`,\n        body\n      );\n      // console.log(response.data.data);\n      setNewCustomer(response.data.data);\n    } catch (error) {}\n  };\n\n  const fetchGeoDistribution = async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:8000/api/geoDistribute\"\n      );\n      // console.log(response.data.data);\n      setGeoData(response.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGeoMaps = async () => {\n    try {\n      const response = await axios.get(\n        \"https://cdn.jsdelivr.net/npm/world-atlas/countries-50m.json\"\n      );\n      // console.log(response.data.objects);\n      setCountries(response.data);\n      // setGeoData(response.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchCohortData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/purchase\");\n      console.log(response.data.data);\n      setCohort(response.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchSalesData();\n    fetchGrowthRateData();\n    fetchNewCustomerData();\n    fetchGeoDistribution();\n    fetchGeoMaps();\n    fetchCohortData();\n  }, [inputType, range]);\n\n  return (\n    <div className=\"h-screen overflow-hidden\">\n      <div className=\"h-screen overflow-y-auto p-2 max-w-7xl mx-auto scrollbar-hide\">\n        <div>\n          <div className=\" text-2xl font-semibold\">Total Sales Over Time</div>\n          <div className=\" w-1/4 my-5\">\n            <Dropdown\n              options={[\n                { value: \"monthlyTotalSales\", label: \"Monthly\" },\n                { value: \"dailyTotalSales\", label: \"Daily\" },\n                { value: \"quarterlyTotalSales\", label: \"Quarterly\" },\n                { value: \"yearlyTotalSales\", label: \"Yearly\" },\n              ]}\n              onSelect={handleSelect}\n            />\n          </div>\n          <TotalSales dataType={inputType} fetchedData={data} />\n        </div>\n        <div className=\"my-10\">\n          <div className=\"text-2xl font-semibold mb-5\">\n            Sales Growth Rate Over Time\n          </div>\n          <GrowthRate fetchedData={chartData} />\n        </div>\n        <div className=\"my-10\">\n          <div className=\"text-2xl font-semibold mb-5\">\n            New Customers Added Over Time\n          </div>\n          <div className=\" w-1/4 my-5\">\n            <Dropdown\n              options={[\n                { value: \"3years\", label: \"Last 3 Years\" },\n                { value: \"7days\", label: \"Last 7 Days\" },\n                { value: \"1month\", label: \"Last 1 Month\" },\n                { value: \"6months\", label: \"Last 6 Months\" },\n                { value: \"1year\", label: \"Last 1 Year\" },\n                { value: \"2years\", label: \"Last 2 Years\" },\n                { value: \"4years\", label: \"Last 4 Years\" },\n                { value: \"5years\", label: \"Last 5 Years\" },\n              ]}\n              onSelect={handleLast}\n            />\n          </div>\n          <NewCustomer fetchedData={newCustomer} />\n        </div>\n        <div className=\"my-10\">\n          <div className=\"text-2xl font-semibold mb-5\">\n            Geographical Distribution of Customers\n          </div>\n          {/* <GeoDistribute fetchedData={geoData} /> */}\n          <MapChart data={countries} citiesData={geoData} />\n        </div>\n        <div className=\"my-10\">\n          <div className=\"text-2xl font-semibold mb-5\">Cohort Analysis</div>\n          <CohortChart data={cohort} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}